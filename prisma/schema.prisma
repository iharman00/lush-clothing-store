// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String  @id @default(cuid())
  stripe_customer_id    String?  @unique
  firstName             String
  lastName              String
  email                 String  @unique
  emailVerified         Boolean @default(false)
  password              String
  createdAt             DateTime @default(now()) 
  updatedAt             DateTime @updatedAt 
  
  sessions              Session[]
  emailVerificationCode EmailVerificationCode[]
  orders                Orders[]
  @@map("users")
}

model Session {
  id                    String  @id @default(cuid())
  userId                String  @unique
  expiresAt             DateTime

  user                  User  @relation(references: [id], fields: [userId], onDelete: Cascade)
  @@map("sessions")
}

model EmailVerificationCode {
  id                    String  @id @default(cuid())
  code                  String
  userId                String  @unique
  email                 String
  expiresAt             DateTime

  user                  User  @relation(references: [id], fields: [userId], onDelete: Cascade)
  @@map("email_verification_codes")
}

model Orders{
  id                          String  @id @default(cuid())
  stripe_checkout_session_id  String  @unique
  userId                      String? // userId optional for guest users
  userEmail                   String
  createdAt                   DateTime @default(now())
  orderTotal                  Int
  isPaid                      Boolean
  orderItems                  OrderItems[]
  user                        User?  @relation(references: [id], fields: [userId], onDelete: Cascade)
  @@map("orders")
}

model OrderItems{
  id                    String  @id @default(cuid())
  createdAt             DateTime @default(now())
  orderId               String
  productId             String
  productVariantId      String
  productSizeId         String
  price                 Int
  quantity              Int
  order                 Orders  @relation(references: [id], fields: [orderId], onDelete: Cascade)
  @@map("order_items")
}
